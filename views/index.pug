extends layout

block content
	div(class="container")
		div(class="row")
			div(class="col-8")
				h1 Stock Exchange Client
			div(class="col-4")
				button(type="button" class="btn btn-danger btn-block" onclick="logOut()") Log Out
		div(class="row")
			div(class="col")
				p Welcome to a simple example client for the Linux based Stock Exchange.
				p The graph below shows the historic data for the commodity. When a trade is matched, the value of the executed match is recorded at the time of the match. The graphs plots the OCHL chart for the data, meaning it will show the open, close, high and low value of the commodity in the selected time frame.
				p If you place a few buy and sell offers, and ensure some of them will match, you will see the graph update with the new data. Note, that the close indicator will be the last trade executed for the currect time block.
				p There will most likely not be any trades in the recent history, and since it is very difficuilt to generate sample data without knowing when the sameple will be accessed, you will need to do a few trades in order to generate a reasonable chart.
		div(class="row")
			div(class="graph" id="graph")
		form(id="tradeForm")
			div(class="row")
				div(class="col")
					label Price
					input(type="number" step="0.01" class="form-control" id="tradePrice")
				div(class="col")
					label Quantity
					input(type="number" step="1" class="form-control" id="tradeQuantity")
			div(class="row row-top-buffer")
				div(class="col")
					button(type="button" class="btn btn-danger btn-block" onclick="apiBuy()") Buy Offer
				div(class="col")
					button(type="button" class="btn btn-danger btn-block" onclick="apiSell()") Sell Offer
				//div(class="col")
					//button(type="button" class="btn btn-info btn-block" onclick="apiTest()") Test

	script.
		// Check if logged in
		let userToken = localStorage.getItem("userToken");
		if(userToken == null) {
			window.location = "http://localhost:5000/user";
		}

		function draw() {
			let graph = document.getElementById('graph');
			Plotly.plot( graph,
				[{
					x: ['2017-01-04', '2017-01-05', '2017-01-06', '2017-01-07', '2017-01-08'],
					open: [1, 2, 2.7, 4.5, 7],
					close: [1.6, 2.4, 4, 4.1, 3],
					high: [2.1, 2, 4, 5, 11],
					low: [0.4, 2, 4, 3.2, 1.1],
					increasing: {line: {color: '#2d7fc6'}},
					decreasing: {line: {color: '#ef4545'}},
					type: 'ohlc'
				}],
				{
					margin: {
						r: 0,
						t: 0,
						b: 0,
						l: 0
					},
					showlegend: false
				}
			);
		}
		draw();

		function logOut() {
			localStorage.clear();
			window.location = "http://localhost:5000/user";
		}

		function apiTest() {
			console.log("Test");
			fetch("http://91.152.159.205:59999/api/data/commodities/test/15").then(function(response) {
				response.text().then(function(data) {

					let values = JSON.parse(data);
					values.increasing = {line: {color: '#2d7fc6'}};
					values.decreasing = {line: {color: '#ef4545'}};
					values.type = 'ohlc';

					console.log(values);

					let graph = document.getElementById('graph');
					Plotly.plot( graph,
						[values],
						{
							margin: {
								r: 30,
								t: 10,
								b: 10,
								l: 30
							},
							showlegend: false
						}
					);
				});
			});
		}
		function apiBuy() {
			console.log("Buying");
			let price = $('#tradePrice').val();
			let qty = $('#tradeQuantity').val();
			fetch("http://91.152.159.205:59999/api/buy/1/" + price + "/" + qty).then(function(response) {
				response.text().then(function(data) {
					console.log(data);
				});
			});
		}
		function apiSell() {
			console.log("Selling");
			let price = $('#tradePrice').val();
			let qty = $('#tradeQuantity').val();
			fetch("http://91.152.159.205:59999/api/sell/1/" + price + "/" + qty).then(function(response) {
				response.text().then(function(data) {
					console.log(data);
				});
			});
		}
